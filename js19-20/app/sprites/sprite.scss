// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$areto-name: 'areto';
$areto-x: 0px;
$areto-y: 542px;
$areto-offset-x: 0px;
$areto-offset-y: -542px;
$areto-width: 110px;
$areto-height: 24px;
$areto-total-width: 640px;
$areto-total-height: 566px;
$areto-image: 'sprite.png';
$areto: (0px, 542px, 0px, -542px, 110px, 24px, 640px, 566px, 'sprite.png', 'areto', );
$left-name: 'left';
$left-x: 595px;
$left-y: 401px;
$left-offset-x: -595px;
$left-offset-y: -401px;
$left-width: 30px;
$left-height: 55px;
$left-total-width: 640px;
$left-total-height: 566px;
$left-image: 'sprite.png';
$left: (595px, 401px, -595px, -401px, 30px, 55px, 640px, 566px, 'sprite.png', 'left', );
$partner1-name: 'partner1';
$partner1-x: 443px;
$partner1-y: 401px;
$partner1-offset-x: -443px;
$partner1-offset-y: -401px;
$partner1-width: 122px;
$partner1-height: 122px;
$partner1-total-width: 640px;
$partner1-total-height: 566px;
$partner1-image: 'sprite.png';
$partner1: (443px, 401px, -443px, -401px, 122px, 122px, 640px, 566px, 'sprite.png', 'partner1', );
$partner2-name: 'partner2';
$partner2-x: 446px;
$partner2-y: 275px;
$partner2-offset-x: -446px;
$partner2-offset-y: -275px;
$partner2-width: 124px;
$partner2-height: 124px;
$partner2-total-width: 640px;
$partner2-total-height: 566px;
$partner2-image: 'sprite.png';
$partner2: (446px, 275px, -446px, -275px, 124px, 124px, 640px, 566px, 'sprite.png', 'partner2', );
$partner3-name: 'partner3';
$partner3-x: 320px;
$partner3-y: 401px;
$partner3-offset-x: -320px;
$partner3-offset-y: -401px;
$partner3-width: 123px;
$partner3-height: 123px;
$partner3-total-width: 640px;
$partner3-total-height: 566px;
$partner3-image: 'sprite.png';
$partner3: (320px, 401px, -320px, -401px, 123px, 123px, 640px, 566px, 'sprite.png', 'partner3', );
$partner4-name: 'partner4';
$partner4-x: 320px;
$partner4-y: 275px;
$partner4-offset-x: -320px;
$partner4-offset-y: -275px;
$partner4-width: 126px;
$partner4-height: 126px;
$partner4-total-width: 640px;
$partner4-total-height: 566px;
$partner4-image: 'sprite.png';
$partner4: (320px, 275px, -320px, -275px, 126px, 126px, 640px, 566px, 'sprite.png', 'partner4', );
$partner-cup-name: 'partner_cup';
$partner-cup-x: 570px;
$partner-cup-y: 357px;
$partner-cup-offset-x: -570px;
$partner-cup-offset-y: -357px;
$partner-cup-width: 41px;
$partner-cup-height: 41px;
$partner-cup-total-width: 640px;
$partner-cup-total-height: 566px;
$partner-cup-image: 'sprite.png';
$partner-cup: (570px, 357px, -570px, -357px, 41px, 41px, 640px, 566px, 'sprite.png', 'partner_cup', );
$partner-jar-name: 'partner_jar';
$partner-jar-x: 565px;
$partner-jar-y: 456px;
$partner-jar-offset-x: -565px;
$partner-jar-offset-y: -456px;
$partner-jar-width: 41px;
$partner-jar-height: 40px;
$partner-jar-total-width: 640px;
$partner-jar-total-height: 566px;
$partner-jar-image: 'sprite.png';
$partner-jar: (565px, 456px, -565px, -456px, 41px, 40px, 640px, 566px, 'sprite.png', 'partner_jar', );
$partner-plane-name: 'partner_plane';
$partner-plane-x: 570px;
$partner-plane-y: 275px;
$partner-plane-offset-x: -570px;
$partner-plane-offset-y: -275px;
$partner-plane-width: 41px;
$partner-plane-height: 41px;
$partner-plane-total-width: 640px;
$partner-plane-total-height: 566px;
$partner-plane-image: 'sprite.png';
$partner-plane: (570px, 275px, -570px, -275px, 41px, 41px, 640px, 566px, 'sprite.png', 'partner_plane', );
$partner-tv-name: 'partner_tv';
$partner-tv-x: 570px;
$partner-tv-y: 316px;
$partner-tv-offset-x: -570px;
$partner-tv-offset-y: -316px;
$partner-tv-width: 41px;
$partner-tv-height: 41px;
$partner-tv-total-width: 640px;
$partner-tv-total-height: 566px;
$partner-tv-image: 'sprite.png';
$partner-tv: (570px, 316px, -570px, -316px, 41px, 41px, 640px, 566px, 'sprite.png', 'partner_tv', );
$right-name: 'right';
$right-x: 565px;
$right-y: 401px;
$right-offset-x: -565px;
$right-offset-y: -401px;
$right-width: 30px;
$right-height: 55px;
$right-total-width: 640px;
$right-total-height: 566px;
$right-image: 'sprite.png';
$right: (565px, 401px, -565px, -401px, 30px, 55px, 640px, 566px, 'sprite.png', 'right', );
$work1-name: 'work1';
$work1-x: 320px;
$work1-y: 0px;
$work1-offset-x: -320px;
$work1-offset-y: 0px;
$work1-width: 320px;
$work1-height: 274px;
$work1-total-width: 640px;
$work1-total-height: 566px;
$work1-image: 'sprite.png';
$work1: (320px, 0px, -320px, 0px, 320px, 274px, 640px, 566px, 'sprite.png', 'work1', );
$work2-name: 'work2';
$work2-x: 0px;
$work2-y: 275px;
$work2-offset-x: 0px;
$work2-offset-y: -275px;
$work2-width: 320px;
$work2-height: 267px;
$work2-total-width: 640px;
$work2-total-height: 566px;
$work2-image: 'sprite.png';
$work2: (0px, 275px, 0px, -275px, 320px, 267px, 640px, 566px, 'sprite.png', 'work2', );
$work3-name: 'work3';
$work3-x: 0px;
$work3-y: 0px;
$work3-offset-x: 0px;
$work3-offset-y: 0px;
$work3-width: 320px;
$work3-height: 275px;
$work3-total-width: 640px;
$work3-total-height: 566px;
$work3-image: 'sprite.png';
$work3: (0px, 0px, 0px, 0px, 320px, 275px, 640px, 566px, 'sprite.png', 'work3', );
$spritesheet-width: 640px;
$spritesheet-height: 566px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($areto, $left, $partner1, $partner2, $partner3, $partner4, $partner-cup, $partner-jar, $partner-plane, $partner-tv, $right, $work1, $work2, $work3, );
$spritesheet: (640px, 566px, 'sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
